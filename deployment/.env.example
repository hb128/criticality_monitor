# Critical Mass Server Deployment Environment Variables

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Automated logger settings
INTERVAL=60                          # Logging interval in seconds (default: 60)
LOG_LEVEL=INFO                      # Log level: DEBUG, INFO, WARNING, ERROR
LOG_DIR=cm_logs/automated           # Directory for automated logs

# Maximum runs before restart (0 = unlimited)
MAX_RUNS=0

# =============================================================================
# DATA PROCESSING CONFIGURATION  
# =============================================================================

# Number of parallel workers for batch processing (per city)
WORKERS=2

# File patterns to watch and process
FILE_PATTERNS="*.txt,*.json"

# Processing intervals
WATCH_INTERVAL=60                   # File watcher check interval (seconds)

# =============================================================================
# SITE BUILDING CONFIGURATION
# =============================================================================

# Site builder settings
SITE_BUILD_INTERVAL=300             # Site rebuild interval (seconds)
PRIMARY_CITY=hamburg               # Primary city for main leaderboard site

# Website settings
RECENT_LIMIT=30                    # Number of recent rides to show in plots
LEADERBOARD_LIMIT=10               # Number of entries in leaderboards

# Map copying settings
COPY_MAPS=true                     # Whether to copy individual map files
MAPS_SUBDIR=maps                   # Subdirectory for map files

# =============================================================================
# MONITORING CONFIGURATION
# =============================================================================

# Monitoring check intervals
CHECK_INTERVAL=60                  # Service health check interval (seconds)
FILE_HEALTH_CHECK=true            # Enable file-based health checks

# Health check thresholds
LOG_FRESHNESS_THRESHOLD=300        # Max age for log files (seconds)
CSV_FRESHNESS_THRESHOLD=3600       # Max age for CSV files (seconds)

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================

# Container resource limits
MEMORY_LIMIT=1g                    # Memory limit per container
CPU_LIMIT=1.0                      # CPU limit per container (cores)

# Volume mount points
CM_LOGS_PATH=./cm_logs             # Host path for log files
SITE_PATH=./site                   # Host path for generated sites
CONFIG_PATH=./config               # Host path for configuration files

# =============================================================================
# WEB SERVER CONFIGURATION
# =============================================================================

# Nginx settings
WEB_PORT=8080                      # External port for web access
NGINX_WORKER_PROCESSES=auto        # Number of nginx worker processes
NGINX_WORKER_CONNECTIONS=1024      # Connections per worker

# Gzip compression
GZIP_ENABLED=true
GZIP_LEVEL=6

# =============================================================================
# CITY-SPECIFIC CONFIGURATION
# =============================================================================

# Hamburg configuration
HAMBURG_LAT_MIN=53.3
HAMBURG_LAT_MAX=53.8  
HAMBURG_LON_MIN=9.6
HAMBURG_LON_MAX=10.35

# Berlin configuration  
BERLIN_LAT_MIN=52.3
BERLIN_LAT_MAX=52.7
BERLIN_LON_MIN=13.0
BERLIN_LON_MAX=13.8

# Pipeline parameters (used by all cities unless overridden)
PIPELINE_K=6                       # Number of nearest neighbors
PIPELINE_N_SIGMAS=3.0             # Standard deviations for filtering
PIPELINE_L0=50.0                  # Base length parameter
PIPELINE_PENALTY_FACTOR=3.0       # Penalty factor for optimization
PIPELINE_ANGLE_BIAS=8.0           # Angle bias (meters per radian)
PIPELINE_STEP_PENALTY=5.0         # Step penalty (meters per edge)
PIPELINE_MIN_EDGE_COST=15.0       # Minimum edge cost (meters)
PIPELINE_BOUNDS_EXPAND=2.0        # Bounds expansion factor

# =============================================================================
# BACKUP AND MAINTENANCE
# =============================================================================

# Backup settings
BACKUP_RETENTION_DAYS=30          # Days to keep backup files
AUTO_CLEANUP_ENABLED=true         # Enable automatic cleanup of old files
CLEANUP_DAYS=7                    # Days to keep log files

# Maintenance windows
MAINTENANCE_HOUR=3                # Hour (0-23) for daily maintenance
RESTART_HOUR=4                    # Hour for daily service restart

# =============================================================================
# DEVELOPMENT/DEBUG SETTINGS
# =============================================================================

# Development mode settings (set to false for production)
DEBUG_MODE=false
VERBOSE_LOGGING=false
USE_SAMPLE_DATA=false

# API settings
API_TIMEOUT=30                    # API request timeout (seconds)
API_RETRY_COUNT=3                 # Number of API retry attempts

# =============================================================================
# EXTERNAL INTEGRATIONS
# =============================================================================

# Email notifications (optional)
SMTP_SERVER=""
SMTP_PORT=587
SMTP_USERNAME=""
SMTP_PASSWORD=""
NOTIFICATION_EMAIL=""

# Webhook notifications (optional)
WEBHOOK_URL=""
WEBHOOK_SECRET=""

# =============================================================================
# NOTES
# =============================================================================

# This file contains default values. Copy this to `.env` and modify as needed.
# Docker Compose will automatically load variables from `.env` file.
# 
# Boolean values: use 'true' or 'false' (lowercase)
# Paths: use forward slashes, even on Windows (Docker will handle conversion)
# 
# For production deployments:
# 1. Copy this file to `.env`
# 2. Modify values as appropriate for your environment
# 3. Never commit `.env` to version control (add to .gitignore)
# 4. Use Docker secrets for sensitive values in production